---
- name: Update apt repo and cache on all Debian/Ubuntu boxes
  apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600
  when: ansible_distribution == "Ubuntu"

- name: Upgrade all packages on servers
  apt:
    upgrade: dist
    force_apt_get: yes
  when: ansible_distribution == "Ubuntu"

- name: Update all installed packages using YUM module
  yum:
    name: '*'
    state: latest
    update_cache: yes
    update_only: yes
  register: yum_update_status
  when: ansible_distribution == "Centos" or ansible_distribution == "Redhat" or ansible_distribution == "AlmaLinux"

- name: Remove packates not needed anymore
  yum:
    autoremove: yes
  when: ansible_distribution == "Centos" or ansible_distribution == "Redhat" or ansible_distribution == "AlmaLinux"

- name: Reboot when packages were updated
  reboot:
  when: yum_update_status.changed and ansible_distribution == "Centos" or ansible_distribution == "Redhat" or ansible_distribution == "AlmaLinux"

- name: Check if a reboot is needed on all servers
  register: reboot_required_file
  stat:
    path: /var/run/reboot-required
    get_md5: no
  when: ansible_distribution == "Centos" or ansible_distribution == "Redhat" or ansible_distribution == "AlmaLinux"

#- name: Reboot the box if kernel updated
#  reboot:
#    msg: "Reboot initiated by Ansible for kernel updates"
#    connect_timeout: 5
#    reboot_timeout: 300
#    pre_reboot_delay: 0
#    post_reboot_delay: 30
#    test_command: uptime
#  when: reboot_required_file.stat.exist == true


- name: Check if a reboot is required.
  ansible.builtin.stat:
      path: /var/run/reboot-required
      get_md5: no
  register: reboot_required_file
    
- name: Reboot the server (if required).
  ansible.builtin.reboot:
  when: reboot_required_file.stat.exists == true
  
